{"remainingRequest":"/Users/qinlin/Study/项目组案例/icbc/dom2/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/qinlin/Study/项目组案例/icbc/dom2/src/components/FastEntrance/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/qinlin/Study/项目组案例/icbc/dom2/src/components/FastEntrance/index.vue","mtime":1541085719288},{"path":"/Users/qinlin/Study/项目组案例/icbc/dom2/node_modules/cache-loader/dist/cjs.js","mtime":1540456554426},{"path":"/Users/qinlin/Study/项目组案例/icbc/dom2/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/qinlin/Study/项目组案例/icbc/dom2/node_modules/cache-loader/dist/cjs.js","mtime":1540456554426},{"path":"/Users/qinlin/Study/项目组案例/icbc/dom2/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n\n  props:['fastList','Type'],\n\n  computed:{\n\n     listClass () {\n\n       const val = parseInt( 100 / this.Type );\n\n       if( this.Type === 4 ){\n\n         return 'width' + val + ' ' + 'lineShow ' + ' ' + 'lineNone' + this.Type\n\n       } else {\n\n         return 'width' + val\n       }\n     },\n\n    isShow(){\n\n     if ( this.Type === 4 ) {\n\n       return false\n\n     } else {\n\n       return true\n     }\n\n    }\n\n  },\n\n  methods:{\n    // 获取整排的数量 * 单排个数  再与本排的序数相比 若超过完整排 则是最后一排的序数\n    hiddeBL ( val ) {\n\n      if( this.Type === 4 ){\n         // 设参\n         let init;\n\n         let arryLength = this.fastList.length;\n\n         let rows = this.Type;\n\n         let lineNum =  arryLength / rows ;\n\n         let flg = (/^\\+?[1-9][0-9]*$/).test( lineNum );　\n\n          if(flg){\n\n           init = (lineNum -1) * rows\n\n         } else {\n\n           init = parseInt( lineNum ) * rows\n         }\n\n         // init 就是完整排（除最后一排）的序数\n\n         if(val > init){\n\n           return \"border-bottom:none\"\n        }\n\n       }\n    }\n\n  }\n}\n",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAuBA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA","file":"index.vue","sourceRoot":"src/components/FastEntrance","sourcesContent":["<template>\n  <section class=\"fast box\" v-if=\"fastList\">\n     <div class=\"box\">\n       <ul>\n         <router-link\n           tag=\"li\"\n           to=\"/\"\n           v-for=\"(item, index) in fastList\"\n           :key = \"index\" :class=\"listClass\"\n           :style=\"hiddeBL(index+1)\">\n           <img :src=\"item.imgUrl\" alt=\"\"/>\n           <p>{{item.text}}</p>\n         </router-link>\n          <!--若是json没有值呢-->\n         <router-link v-if=\"isShow\" to=\"/\" tag=\"li\" :class=\"listClass\" style=\"border-bottom: none\">\n           <p>更多</p>\n         </router-link>\n       </ul>\n     </div>\n  </section>\n</template>\n\n<script>\n    export default {\n\n      props:['fastList','Type'],\n\n      computed:{\n\n         listClass () {\n\n           const val = parseInt( 100 / this.Type );\n\n           if( this.Type === 4 ){\n\n             return 'width' + val + ' ' + 'lineShow ' + ' ' + 'lineNone' + this.Type\n\n           } else {\n\n             return 'width' + val\n           }\n         },\n\n        isShow(){\n\n         if ( this.Type === 4 ) {\n\n           return false\n\n         } else {\n\n           return true\n         }\n\n        }\n\n      },\n\n      methods:{\n        // 获取整排的数量 * 单排个数  再与本排的序数相比 若超过完整排 则是最后一排的序数\n        hiddeBL ( val ) {\n\n          if( this.Type === 4 ){\n             // 设参\n             let init;\n\n             let arryLength = this.fastList.length;\n\n             let rows = this.Type;\n\n             let lineNum =  arryLength / rows ;\n\n             let flg = (/^\\+?[1-9][0-9]*$/).test( lineNum );　\n\n              if(flg){\n\n               init = (lineNum -1) * rows\n\n             } else {\n\n               init = parseInt( lineNum ) * rows\n             }\n\n             // init 就是完整排（除最后一排）的序数\n\n             if(val > init){\n\n               return \"border-bottom:none\"\n            }\n\n           }\n        }\n\n      }\n    }\n</script>\n\n<style scoped lang=\"scss\">\n.fast{\n  .box {\n    li{\n      padding-top: 10px;\n      float: left;\n      height: 5.5em;\n      overflow: hidden;\n      box-sizing: border-box;\n      img{\n        width: 44%;\n        display: block;\n        margin: 0 auto;\n      }\n      p{\n        color: #333;\n        text-align: center;\n        padding-top: 10px;\n        font-size: 11px;\n      }\n    }\n\n  }\n}\n</style>\n"]}]}