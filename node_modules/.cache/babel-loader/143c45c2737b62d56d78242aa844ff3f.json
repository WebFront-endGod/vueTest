{"remainingRequest":"/Users/qinlin/Study/项目组案例/icbc/dom2/node_modules/babel-loader/lib/index.js!/Users/qinlin/Study/项目组案例/icbc/dom2/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/qinlin/Study/项目组案例/icbc/dom2/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/qinlin/Study/项目组案例/icbc/dom2/src/components/NineLattice/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/qinlin/Study/项目组案例/icbc/dom2/src/components/NineLattice/index.vue","mtime":1541052606882},{"path":"/Users/qinlin/Study/项目组案例/icbc/dom2/node_modules/cache-loader/dist/cjs.js","mtime":1540456554426},{"path":"/Users/qinlin/Study/项目组案例/icbc/dom2/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/qinlin/Study/项目组案例/icbc/dom2/node_modules/cache-loader/dist/cjs.js","mtime":1540456554426},{"path":"/Users/qinlin/Study/项目组案例/icbc/dom2/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  props: ['NineData', 'colors', 'goTo'],\n  computed: {\n    Datas: function Datas() {\n      var length = this.NineData.length; // 若传入的值的长度为0.则反回空数组，组件页面不显示\n\n      if (!length) {\n        return [];\n      }\n\n      var index = 0;\n      var resIndex = 0; // 设一个空数组的变量，并计算出分割出来数组的长度\n\n      var result = new Array(Math.ceil(length / 3));\n\n      while (index < length) {\n        //循环过程中设置result[0]和result[1]的值。该值根据array.slice切割得到。\n        result[resIndex++] = this.NineData.slice(index, index += 3);\n      }\n\n      return result;\n    }\n  },\n  methods: {\n    //颜色随机\n    getColor: function getColor() {\n      var colorNum = Math.floor(Math.random() * 10);\n      var array = ['green', 'red', 'prink', 'darkblue', 'salmon', 'teal', 'hotpink', 'lawngreen', 'blue', 'aqua'];\n      return 'color:' + array[colorNum];\n    },\n    //页面传值给组件,值也可以是class名，方法一样的\n    getColors: function getColors(m, n) {\n      var color = this.colors[m];\n      return 'color:' + color[n];\n    },\n    //也可以是后台返参。to的值也可以父组件传值过来\n    go: function go() {\n      return '/';\n    }\n  }\n};",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;AAeA,eAAA;AACA,SAAA,CAAA,UAAA,EAAA,QAAA,EAAA,MAAA,CADA;AAEA,YAAA;AAEA,SAFA,mBAEA;AACA,UAAA,SAAA,KAAA,QAAA,CAAA,MAAA,CADA,CAEA;;AACA,UAAA,CAAA,MAAA,EAAA;AACA,eAAA,EAAA;AACA;;AACA,UAAA,QAAA,CAAA;AACA,UAAA,WAAA,CAAA,CAPA,CAQA;;AACA,UAAA,SAAA,IAAA,KAAA,CAAA,KAAA,IAAA,CAAA,SAAA,CAAA,CAAA,CAAA;;AACA,aAAA,QAAA,MAAA,EAAA;AACA;AACA,eAAA,UAAA,IAAA,KAAA,QAAA,CAAA,KAAA,CAAA,KAAA,EAAA,SAAA,CAAA,CAAA;AACA;;AAEA,aAAA,MAAA;AACA;AAlBA,GAFA;AAsBA,WAAA;AACA;AACA,YAFA,sBAEA;AACA,UAAA,WAAA,KAAA,KAAA,CAAA,KAAA,MAAA,KAAA,EAAA,CAAA;AACA,UAAA,QAAA,CAAA,OAAA,EAAA,KAAA,EAAA,OAAA,EAAA,UAAA,EAAA,QAAA,EAAA,MAAA,EAAA,SAAA,EAAA,WAAA,EAAA,MAAA,EAAA,MAAA,CAAA;AACA,aAAA,WAAA,MAAA,QAAA,CAAA;AACA,KANA;AAOA;AACA,aARA,qBAQA,CARA,EAQA,CARA,EAQA;AACA,UAAA,QAAA,KAAA,MAAA,CAAA,CAAA,CAAA;AACA,aAAA,WAAA,MAAA,CAAA,CAAA;AACA,KAXA;AAYA;AACA,MAbA,gBAaA;AACA,aAAA,GAAA;AACA;AAfA;AAtBA,CAAA","sourcesContent":["<template>\n    <section class=\"Nine box\" v-if=\"Datas.length\">\n        <ul>\n            <router-link tag=\"li\" :to=\"go()\" v-for=\"(items,index) in Datas\" :key=\"index\">\n                <div v-for=\"(item,indexs) in items\" :key=\"indexs\" class=\"items\">\n                  <h3 :style=\"getColors(index,indexs)\">{{item.title}}</h3>\n                  <p>{{item.text}}</p>\n                  <img :src=\"item.imgUrl\" alt=\"\"/>\n                </div>\n            </router-link>\n        </ul>\n    </section>\n</template>\n\n<script>\n    export default {\n        props:['NineData','colors','goTo'],\n        computed:{\n\n            Datas(){\n                const length = this.NineData.length;\n                // 若传入的值的长度为0.则反回空数组，组件页面不显示\n                if(!length){\n                    return []\n                }\n                let index =0 ;\n                let resIndex =0;\n                // 设一个空数组的变量，并计算出分割出来数组的长度\n                let result = new Array(Math.ceil(length/3))\n                while (index < length) {\n                    //循环过程中设置result[0]和result[1]的值。该值根据array.slice切割得到。\n                    result[resIndex++] = this.NineData.slice(index, (index += 3))\n                }\n\n                return result\n            }\n        },\n        methods:{\n            //颜色随机\n            getColor(){\n               const colorNum = Math.floor(Math.random()*10);\n               const array = ['green','red','prink','darkblue','salmon','teal','hotpink','lawngreen','blue','aqua']\n               return 'color:'+array[colorNum]\n            },\n            //页面传值给组件,值也可以是class名，方法一样的\n            getColors(m,n){\n                    const color = (this.colors)[m];\n                    return 'color:'+color[n]\n            },\n            //也可以是后台返参。to的值也可以父组件传值过来\n            go(){\n                return '/'\n            }\n\n        }\n\n    }\n</script>\n\n<style scoped lang=\"scss\">\n    .Nine{\n        ul li {\n            display: flex;\n            text-align: center;\n            border-bottom: 1px solid #e8e8e8;\n            .items{\n                flex:1;\n                box-sizing: border-box;\n                overflow: hidden;\n                h3{\n                    line-height: 1.067em;\n                    margin-top: 0.93em;\n                    padding: 0 0.3em;\n                    font-weight: bold;\n                    height: 1.067em;\n                    overflow: hidden;\n                    word-break: break-word;\n\n                }\n                p{\n                    font-size: 0.75em;\n                    color: #898989;\n                    line-height: 1.5em;\n                    padding: 0 0.375em;\n                    height: 1.5em;\n                    overflow: hidden;\n                    word-break: break-word;\n\n                }\n                img{\n                    width: 90.32%;\n                    padding-bottom: 2px\n                }\n            }\n\n            .items:nth-child(2){\n                border-left: 1px solid #e8e8e8;\n                border-right: 1px solid #e8e8e8;\n            }\n        }\n        ul li:last-child{\n            border-bottom: none;\n        }\n    }\n\n</style>\n"],"sourceRoot":"src/components/NineLattice"}]}